		睡眠-用于项目在长途跋涉中休眠
		电压检测-返回当前工作电压
		打开扫描
		选取目标-最强信号,可以选择最强俩个或者三个
		
		仿造网络-同时干扰网络-同时启动钓鱼页面
		等待密码更新
		就是再来一个网络,让对方主动连接,并且访问192.168.1.1

		验证密码
		如果网络连接正确-关闭干扰-关闭仿造-关闭钓鱼
		如果不正确-继续前四步操作

进来先打开各种功能服务,看门狗什么的,
检查当前状态,对应状态值标志位,先检查能否连接网络,电压等等,
没网的时候会给钓鱼置为联网复位,
有网的时候会给钓鱼复位联网置为,
判断每各多长时间判断一次,loop里面每一个函数都要if
基础一点的写上面,功能类的写下面

先连接好再突然断网,好像就不会自己检查到


a charset="utf-8"> 
<title>网络安全</title> 
<meta name="description" content="Wi-Fi Deauthenticator"> 
<meta name="author" content="Spacehuhn - Stefan Kremser"> 
<meta name="viewport" content="width=device-width, initial-scale=1"> 
<style> 
body { color: #333; font-family: Century Gothic, sans-serif; font-size: 18px; line-height: 24px; margin: 0; padding: 0; }
div { padding: 0.5em; }
input { width: 50%; padding: 9px 10px; margin: 8px 0; box-sizing: border-box; border-radius: 0; border: 1px solid #555555; border-radius: 10px; }
label { color: #333; display: block; font-style: italic; font-weight: bold; } 
</style>
</head>
<body><div align="center" style="padding-top:28%">



如果洪水不能用,
嘿，朋友，我是 Kedar，你有没有想阻止所有的 WiFi信号？或者只是想从 WiFi 踢某人或邻居 WiFi 。那么，本玩法是你等待结束的时刻了。这是为你提供的、仅需 $8 的 DIY Wifi 干扰器。

这个干扰器是如此微小，你可以放在口袋里，并随身携带。它可以通过您的电源或 3.7v 锂电池供电。你可以选择你想要的那个 WiFi网络，然后点击它。 但要确保这只是为了教育目的，而不要用于错误的目的。

802.11 WiFi 协议包含一个所谓的去认证帧（deauthentication frame）。它用于从无线网络安全地断开客户端。

因为这些数据包是未加密的，您只需要 WiFi 路由器，以及要从网络断开连接的客户端设备的 MAC 地址。 您不需要在网络中、也不知道网络的密码，这足以在其范围内。

您可以对此设备执行多次攻击，例如您可以阻止任何特定的WiFi网络，或者您可以做信标（beacon）垃圾邮件或随机信标（beacon）垃圾邮件。或者你可以简单的去认证所有。

Let's do it!


这个只能是esp8266可以,开发板的版本必须是早的2.0.0版本,才有int wifi_send_pkt_freedom这个单独发包的方法.

安装 Arduino，并打开它
打开 File -> Preferences
在 Additional Boards Manager URLs 中添加 http://arduino.esp8266.com/stable/package_esp8266com_index.json
打开 Tools > Board > Boards Manager
输入 ESP8266
选择版本2.0.0，然后单击安装（必须是版本2.0.0）
打开 File > Preferences
打开 More preferences can be edited directly 的文件夹。不要忘记保存！
打开 packages > esp8266 > hardware > esp8266 > 2.0.0 > tools > sdk > include
使用你最喜欢的编程器，然后打开 user_interface.h
向下滚动，然后在最后一个 #endif 之前添加以下行：（如果您无法从项目文件中包含的txt文件中，看到正确的副本）
typedef void (**freedom_outside_cb__t)(uint8 status);
int wifi_register_send_pkt_freedom_cb(freedom_outside_cb_t cb); 
void wifi_unregister_send_pkt_freedom__cb(void); 
int wifi_send_pkt_freedom(uint8 **buf, int len, bool sys_seq);
　
 
编辑项目
在 Arduino 中打开 Wifi Jammer > esp8266_deauther > esp8266_deauther.ino
在 Tools > Board 中选择 ESP8266。我使用的是 NodeMCU 0.9，但您可以尝试使用 NodeMCU 1.0 或通用 ESP8266 模块。
从 Tools > Programmer > ArduinoISP 中选择编程器
从 Tools > Port 中选择正确的端口号
烧录（Upload)
